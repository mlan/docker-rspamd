#!/bin/sh
#
# 10-rspamd-common
#
# https://linuxize.com/post/install-and-integrate-rspamd/#configure-rspamd
# https://www.benhup.com/freebsd/clamav-antivirus-for-rspamd-anti-spam-install
# Define variables and functions used during container initialization.
#
# Defined in Dockerfile:
# DOCKER_MILT_LOCAL_DIR DOCKER_MILT_RUNAS DOCKER_MILT_LIB DOCKER_DKIM_LIB
#
RSPAMD_DKIM_SIGNING_CF=${RSPAMD_DKIM_SIGNING_CF-$DOCKER_MILT_LOCAL_DIR/dkim_signing.conf}
KOPANO_SPAMD_LIB=${KOPANO_SPAMD_LIB-/var/lib/kopano/spamd}

##
## Configure milter. More information can be found at links below.
## https://rspamd.com/doc/integration.html#configuring-postfix
## Skip mail without checks if something goes wrong
##
#rspamd_setup_postfix() {
#	if dc_is_installed rspamd-proxy; then
#		dc_log 5 "[rspamd] Configuring postfix"
#		postconf smtpd_milters=unix:private/milter
#		postconf milter_default_action=accept
#	fi
#}

#
# Configure Rspamd using environment variables
#
rspamd_apply_envvars() {
	rspamd_apply_envvars_cfg inc
	rspamd_apply_envvars_cfg conf
}

#
# rspamd_apply_envvars_cfg <suffix>
#
rspamd_apply_envvars_cfg() {
	local suffix=$1
	local locald_basenames="$(rspamd_get_locald_files $suffix)"
	for basename in $locald_basenames; do
		local env_var="$(echo $basename | tr '[:lower:]-' '[:upper:]_')"
		local env_val="$(eval echo \$$env_var)"
		if [ -n "$env_val" ]; then
			local cfg_file=$DOCKER_MILT_LOCAL_DIR/$basename.$suffix
			if [ -e $cfg_file ]; then
				mv -f $cfg_file $cfg_file.bak
			fi
			dc_log 5 "Setting $env_val in $cfg_file"
			echo "$env_val" > $cfg_file
		fi
	done
}

#
# rspamd_get_locald_files <suffix>
#
rspamd_get_locald_files() { find $DOCKER_MILT_DIR/ -type f -print0 | xargs -0 sed -rn 's/^[ ]*[.]include[^/]+[/]local[.]d[/](.*)[.]'${1-inc}'["]/\1/p' | sort -u ;}


#
# DKIM Signing
# https://rspamd.com/doc/modules/dkim_signing.html
#
rspamd_setup_dkim() {
	# generate and activate dkim domainkey.
	# in case of multi domain generate key for first domain only, but accept it
	# to be used for all domains specified.
	local domain=${DKIM_DOMAIN-}
	local user=$DOCKER_MILT_RUNAS
	local bits=${DKIM_KEYBITS-2048}
	local selector=${DKIM_SELECTOR}
	local keyfile=$DOCKER_DKIM_LIB/$domain.$selector.key
	local txtfile=$DOCKER_DKIM_LIB/$domain.$selector.key.pub
	local keystring="$DKIM_PRIVATEKEY"
	if (dc_is_installed rspamd && [ -n "$selector" ] && [ -n "$domain" ]); then
		dc_log 5 "[rspamd] Setting dkim selector and domain to $selector and $domain"
		mkdir -p $DOCKER_DKIM_LIB
		# insert config statements just before last line
		dc_cond_append -i $RSPAMD_DKIM_SIGNING_CF 'selector = "'$selector'";'
		if [ -n "$keystring" ]; then
			if [ -e $keyfile ]; then
				dc_log 4 "[rspamd] Overwriting private dkim key here: $keyfile"
			else
				dc_log 5 "[rspamd] Writing private dkim key here: $keyfile"
			fi
			if echo "$keystring" | grep "PRIVATE KEY" - > /dev/null; then
				echo "$keystring" fold -w 64 > $keyfile
			else
				echo "-----BEGIN RSA PRIVATE KEY-----" > $keyfile
				echo "$keystring" | fold -w 64 >> $keyfile
				echo "-----END RSA PRIVATE KEY-----" >> $keyfile
			fi
		fi
		if [ ! -e $keyfile ]; then
			dc_log 4 "[rspamd] Generating dkim key: $keyfile"
			local message="$(rspamadm dkim_keygen -d $domain -d $selector -b $bits -k $keyfile 2>&1)"
			dc_log 4 "$message"
			echo "$message" > $txtfile
		fi
		dc_cond_chown $user $DOCKER_DKIM_LIB
	fi
}

#
# Monitor Kopano spam dirs KOPANO_SPAMD_LIB
#
rspamd_monitor_spamd() {
	if (dc_is_installed rspamd-client && [ -n "$KOPANO_SPAMD_LIB" ] && [ -d $KOPANO_SPAMD_LIB ]); then
		local service
		for watchdir in $KOPANO_SPAMD_LIB/*; do
			if [ -d $watchdir ]; then
				service="spamd-$(basename $watchdir)"
				dc_log 5 "[rspamd] Setting up $service service."
				docker-service.sh "-n $service $(which inotifyd) $(which rspamd-learn.sh) $watchdir:n"
			fi
		done
	fi
}
